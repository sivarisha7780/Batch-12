import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, classification_report
import joblib

# Step 1: Load Dataset (Example: UCI Heart Disease Dataset)
def load_data():
    url = "https://raw.githubusercontent.com/selva86/datasets/master/heart.csv"
    return pd.read_csv(url)

# Step 2: Preprocess Data
def preprocess_data(df):
    X = df.drop('target', axis=1)  # features
    y = df['target']               # target: 1=disease, 0=no disease
    return train_test_split(X, y, test_size=0.2, random_state=42)

# Step 3: Train Model
def train_model(X_train, y_train):
    model = DecisionTreeClassifier(max_depth=4, random_state=42)
    model.fit(X_train, y_train)
    return model

# Step 4: Evaluate Model
def evaluate_model(model, X_test, y_test):
    predictions = model.predict(X_test)
    print("Accuracy:", accuracy_score(y_test, predictions))
    print("\nClassification Report:\n", classification_report(y_test, predictions))

# Step 5: Predict New Patient Data
def predict_new(model, new_data):
    df = pd.DataFrame([new_data])
    prediction = model.predict(df)
    print("Prediction:", "Disease" if prediction[0] == 1 else "No Disease")

# Main Execution
if __name__ == "__main__":
    df = load_data()
    X_train, X_test, y_train, y_test = preprocess_data(df)
    model = train_model(X_train, y_train)
    evaluate_model(model, X_test, y_test)

    # Save the model for future use
    joblib.dump(model, "disease_model.pkl")

    # Example: Predict on new patient
    new_patient = {
        'age': 58,
        'sex': 1,
        'cp': 2,
        'trestbps': 140,
        'chol': 211,
        'fbs': 0,
        'restecg': 1,
        'thalach': 165,
        'exang': 0,
        'oldpeak': 1.0,
        'slope': 2,
        'ca': 0,
        'thal': 2
    }
    predict_new(model, new_patient)
